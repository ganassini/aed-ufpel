

boa noite meu nome é guilherme ganassini, eu sou da turma M5 de AED e essa é a tarefa 2, que é o problema 1717 do leetcode



-------------------------------------------------------------------------------------------------------------------------

o problema consiste no desenvolvimento de uma função que recebe uma string s de caracteres de tamanho entre 1 e 10^5 
e dois inteiros x e y de tamanho entre 1 e 10^4 e performa duas operações nessa string, remove a substring "ab"
e ganha x pontos ou  remove a substring "ba" e ganha y pontos. 

A função deve retornar o máximo de pontos possíveis após aplicar as operações mencionadas

-------------------------------------------------------------------------------------------------------------------------

em aula meu código nao estava dando certo pois ...

-------------------------------------------------------------------------------------------------------------------------

esse é meu código nao sei oq nao sei oq la

------------------------------------------------------------------------------------------------------------------------

aqui ele no leetcode etc

------------------------------------------------------------------------------------------------------------------------

A PRIMEIRA SOLUÇÃO usa o metodo de pilha e funciona determinando o caso que vale mais pontos, calcula o numero de pares
removidos na primeira iteração, soma com a segunda iteração e soma os dois

A SEGUNDA SOLUÇÃO também começa determinando o caso que vale mais pontos, mas não utiliza o método da pilha, ao invés disso,
opera removendo os pares durante a iteração de cada par e somando sucessivamente o resultado da multiplicação do numero de 
remoções pelos pontos x ou y.

A TERCEIRA SOLUÇÃO é a mais complexa, cada vez que é encontrada uma letra A ou B, é feito um calculo com os elementos seguintes
da string para determinar qual sequencia resulta em mais pontos através da estratégia:
	
	ao encontrar a letra de maior prioridade, aumenta a variavel aCount
	ao encontrar a letra de menor prioridade
		se aCount for maior que 0, zera aCount e incrementa X ao total de pontos
		se for menor, incrementa bCount para futuros pares
	se nao for nem a nem b 
		aumenta o total de pontos pelo minimo de aCount e bCount multiplicado por y (por remover pontos de baixa prioridade)
		zera aCount e bCount
	
